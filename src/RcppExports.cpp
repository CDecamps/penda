// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// compute_DU_cpp
List compute_DU_cpp(NumericMatrix data_ctrl, double threshold);
RcppExport SEXP _penda_compute_DU_cpp(SEXP data_ctrlSEXP, SEXP thresholdSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type data_ctrl(data_ctrlSEXP);
    Rcpp::traits::input_parameter< double >::type threshold(thresholdSEXP);
    rcpp_result_gen = Rcpp::wrap(compute_DU_cpp(data_ctrl, threshold));
    return rcpp_result_gen;
END_RCPP
}
// compute_DU_cppNA
List compute_DU_cppNA(NumericMatrix data_ctrl, double threshold, NumericVector nbNA);
RcppExport SEXP _penda_compute_DU_cppNA(SEXP data_ctrlSEXP, SEXP thresholdSEXP, SEXP nbNASEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type data_ctrl(data_ctrlSEXP);
    Rcpp::traits::input_parameter< double >::type threshold(thresholdSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type nbNA(nbNASEXP);
    rcpp_result_gen = Rcpp::wrap(compute_DU_cppNA(data_ctrl, threshold, nbNA));
    return rcpp_result_gen;
END_RCPP
}
// compute_DU_cpp_V2
List compute_DU_cpp_V2(NumericMatrix data_ctrl, double threshold, double size_max);
RcppExport SEXP _penda_compute_DU_cpp_V2(SEXP data_ctrlSEXP, SEXP thresholdSEXP, SEXP size_maxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type data_ctrl(data_ctrlSEXP);
    Rcpp::traits::input_parameter< double >::type threshold(thresholdSEXP);
    Rcpp::traits::input_parameter< double >::type size_max(size_maxSEXP);
    rcpp_result_gen = Rcpp::wrap(compute_DU_cpp_V2(data_ctrl, threshold, size_max));
    return rcpp_result_gen;
END_RCPP
}
// compute_DU_cppNA_V2
List compute_DU_cppNA_V2(NumericMatrix data_ctrl, double threshold, NumericVector nbNA, double size_max);
RcppExport SEXP _penda_compute_DU_cppNA_V2(SEXP data_ctrlSEXP, SEXP thresholdSEXP, SEXP nbNASEXP, SEXP size_maxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type data_ctrl(data_ctrlSEXP);
    Rcpp::traits::input_parameter< double >::type threshold(thresholdSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type nbNA(nbNASEXP);
    Rcpp::traits::input_parameter< double >::type size_max(size_maxSEXP);
    rcpp_result_gen = Rcpp::wrap(compute_DU_cppNA_V2(data_ctrl, threshold, nbNA, size_max));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_penda_compute_DU_cpp", (DL_FUNC) &_penda_compute_DU_cpp, 2},
    {"_penda_compute_DU_cppNA", (DL_FUNC) &_penda_compute_DU_cppNA, 3},
    {"_penda_compute_DU_cpp_V2", (DL_FUNC) &_penda_compute_DU_cpp_V2, 3},
    {"_penda_compute_DU_cppNA_V2", (DL_FUNC) &_penda_compute_DU_cppNA_V2, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_penda(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
